@model Integrador.Models.Baner

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutDash.cshtml";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div id="page-wrapper">
        <div id="page-inner">
            <div class="row">
                <div class="col-md-12">
                    <h1 class="page-header">
                        <small>@ViewBag.usuario</small>
                    </h1>
                </div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="form-label-group">
                            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="form-label-group">
                            @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-2" })
                            @*@Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="file" id="Avatar" name="upload" accept="image/png" />
                            @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="form-label-group">
                            @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="form-label-group">
                            <table class="table table mdl-data-table table-striped" id="Detalle" name="Detalle">
                                <tr>
                                    <th>
                                        Producto
                                    </th>
                                    <th>
                                        Precio
                                    </th>
                                    <th>
                                        Cantidad
                                    </th>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.EditorFor(model => model.Detalle[0].Producto, new { htmlAttributes = new { @class = "form-control Producto", @type = "text" } })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.Detalle[0].Precio, new { htmlAttributes = new { @class = "form-control" } })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.Detalle[0].Cantidad, new { htmlAttributes = new { @class = "form-control" } })
                                    </td>
                                </tr>
                                <tfoot>
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td>
                                            <a>
                                                <i class="fa fa-fw fa-plus-circle add-row" typeof="button"></i>
                                            </a>
                                        </td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="form-label-group">
                            <input type="submit" value="Crear" class="btn btn-primary btn-block" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/autocomplete1.10.2.js"></script>
<script src="~/Scripts/autocomplete1.11.4.js"></script>
<link href="~/Content/autocomplete.css" rel="stylesheet" />

<script>
    var auto = $.noConflict();

    $(document).ready(function () {

        $(".add-row").click(function () {

            var numero = $("Detalle tr").length + 1;
            var producto = '<input class="form-control text-box single-line Producto" data-val="true" data-val-number="El campo Producto debe ser un número." id="Detalle_' + numero + '__Producto" name="Detalle[' + numero + '].Producto" type="number" value="" />';
            var precio = '<input class="form-control text-box single-line" data-val="true" data-val-number="El campo Precio debe ser un número." id="Detalle_' + numero + '__Precio" name="Detalle[' + numero + '].Precio" type="text" value="" />';
            var cantidad = '<input class="form-control text-box single-line" data-val="true" data-val-number="El campo Cantidad debe ser un número." id="Detalle_' + numero + '_Cantidad" name="Detalle[' + numero + '].Cantidad" type="number" value="" />';

            var markup = "<tr><td>" + producto + "</td><td>" + precio + "</td><td>" + cantidad + "</td></tr>";

            $("table tbody").append(markup);

        });
    });

    $('body').on('keydown.autocomplete', '.Producto', function () {

        auto(this).autocomplete({
            source: function (request, response) {
                auto.ajax({
                    type: "POST",
                    url: '../BuscaProducto',
                    dataType: "json",
                    data: { "Prefix": request.term },
                    success: function (data) {
                        response(auto.map(data, function (item) {
                            return { label: item.Producto, value: item.ID };
                        }))
                    }
                })
            },

            messages: {
                noResults: '',
                results: function (resultsCount) { }
            },

            change: function (e, ui) {
                if (!(ui.item)) {
                    e.target.value = "";
                }
            },

            select: function (event, ui) {
            }
        });
    });

</script>
